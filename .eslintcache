[{"D:\\ReactProjects\\lite-lineage\\src\\index.js":"1","D:\\ReactProjects\\lite-lineage\\src\\App.js":"2","D:\\ReactProjects\\lite-lineage\\src\\reportWebVitals.js":"3","D:\\ReactProjects\\lite-lineage\\src\\components\\Content.jsx":"4","D:\\ReactProjects\\lite-lineage\\src\\components\\Header.jsx":"5","D:\\ReactProjects\\lite-lineage\\src\\components\\Footer.jsx":"6","D:\\ReactProjects\\lite-lineage\\src\\components\\StartView.jsx":"7","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyView.jsx":"8","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyMember.jsx":"9","D:\\ReactProjects\\lite-lineage\\src\\components\\SideDrawer.jsx":"10","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyMemberExtension.jsx":"11","D:\\ReactProjects\\lite-lineage\\src\\components\\NavInFamily.jsx":"12","D:\\ReactProjects\\lite-lineage\\src\\FamilyTree.js":"13","D:\\ReactProjects\\lite-lineage\\src\\Person.js":"14","D:\\ReactProjects\\lite-lineage\\src\\components\\SideDrawerEditMemberForm.jsx":"15","D:\\ReactProjects\\lite-lineage\\src\\components\\StartTreeButton.jsx":"16","D:\\ReactProjects\\lite-lineage\\src\\TreeContext.js":"17","D:\\ReactProjects\\lite-lineage\\src\\components\\SpecialDateInput.jsx":"18","D:\\ReactProjects\\lite-lineage\\src\\Helpers.js":"19","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyConnection.jsx":"20","D:\\ReactProjects\\lite-lineage\\src\\components\\ConnectionRenderer.jsx":"21","D:\\ReactProjects\\lite-lineage\\src\\components\\SelectParent.jsx":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":10581,"mtime":1611162330350,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":592,"mtime":1610045473535,"results":"27","hashOfConfig":"24"},{"size":2305,"mtime":1610568177174,"results":"28","hashOfConfig":"24"},{"size":280,"mtime":1609793104158,"results":"29","hashOfConfig":"24"},{"size":3042,"mtime":1610730003971,"results":"30","hashOfConfig":"24"},{"size":7977,"mtime":1611083627866,"results":"31","hashOfConfig":"24"},{"size":3713,"mtime":1611154357378,"results":"32","hashOfConfig":"24"},{"size":706,"mtime":1610134593881,"results":"33","hashOfConfig":"24"},{"size":1233,"mtime":1611154795724,"results":"34","hashOfConfig":"24"},{"size":1397,"mtime":1610649766940,"results":"35","hashOfConfig":"24"},{"size":8604,"mtime":1611159951168,"results":"36","hashOfConfig":"24"},{"size":6385,"mtime":1611162220961,"results":"37","hashOfConfig":"24"},{"size":11288,"mtime":1611083784422,"results":"38","hashOfConfig":"24"},{"size":1832,"mtime":1610045360126,"results":"39","hashOfConfig":"24"},{"size":313,"mtime":1610045323469,"results":"40","hashOfConfig":"24"},{"size":4578,"mtime":1610736591468,"results":"41","hashOfConfig":"24"},{"size":2540,"mtime":1610910066241,"results":"42","hashOfConfig":"24"},{"size":836,"mtime":1610557023317,"results":"43","hashOfConfig":"24"},{"size":327,"mtime":1610546192417,"results":"44","hashOfConfig":"24"},{"size":1050,"mtime":1611153573460,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"19gfp4v",{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ReactProjects\\lite-lineage\\src\\index.js",[],["100","101"],"D:\\ReactProjects\\lite-lineage\\src\\App.js",["102","103","104","105","106"],"D:\\ReactProjects\\lite-lineage\\src\\reportWebVitals.js",[],"D:\\ReactProjects\\lite-lineage\\src\\components\\Content.jsx",["107"],"import React, { Component } from 'react';\r\nimport FamilyView from './FamilyView';\r\nimport StartView from './StartView';\r\nimport '../App.css';\r\nimport TreeContext from '../TreeContext';\r\n\r\nclass Content extends Component\r\n{\r\n    static contextType = TreeContext;\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        //this.state = {}\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"main_content\">\r\n                {(this.context.isInTree === true) ? <FamilyView/> : <StartView/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","D:\\ReactProjects\\lite-lineage\\src\\components\\Header.jsx",[],"D:\\ReactProjects\\lite-lineage\\src\\components\\Footer.jsx",[],"D:\\ReactProjects\\lite-lineage\\src\\components\\StartView.jsx",[],"D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyView.jsx",["108","109","110","111","112","113","114"],"import React, { Component } from 'react';\r\nimport SideDrawer from './SideDrawer';\r\nimport FamilyMember from './FamilyMember';\r\nimport SideDrawerEditMemberForm from './SideDrawerEditMemberForm';\r\nimport '../App.css';\r\nimport TreeContext from '../TreeContext';\r\nimport Person from '../Person';\r\nimport Helpers from '../Helpers';\r\nimport ConnectionRenderer from './ConnectionRenderer';\r\nimport FamilyConnection from './FamilyConnection';\r\n\r\nclass FamilyView extends Component\r\n{\r\n    static contextType = TreeContext;\r\n    #zoomMin = 0;\r\n    #zoomMax = 4;\r\n    #locationScalesByZoom = [20, 30, 40, 60, 80];\r\n    #lineCenteringOffsetByZoom = [\r\n        {x: 40, y: 20},\r\n        {x: 60, y: 30},\r\n        {x: 80, y: 40},\r\n        {x: 120, y: 60},\r\n        {x: 160, y: 80}\r\n    ];\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            editingPerson: false,\r\n            editedPersonId: null,\r\n            zoomLvl: 2,\r\n            locationScale: 40,\r\n            stretcherOverhead: {x: 7, y: 5},\r\n            isDragging: false,\r\n            draggedId: null,\r\n            lineCenteringOffset: {x: 80, y: 40},\r\n        }\r\n        this.startEdit = this.startEdit.bind(this);\r\n        this.reportDeletionToEdit = this.reportDeletionToEdit.bind(this);\r\n        this.endEdit = this.endEdit.bind(this);\r\n        this.startDrag = this.startDrag.bind(this);\r\n        this.tryDrag = this.tryDrag.bind(this);\r\n        this.endDrag = this.endDrag.bind(this);\r\n        this.zoom = this.zoom.bind(this);\r\n    }\r\n\r\n    startEdit(personId)\r\n    {\r\n        this.setState({editingPerson: true, editedPersonId: personId});\r\n    }\r\n\r\n    reportDeletionToEdit(personId)\r\n    {\r\n        if (this.state.editingPerson === true && this.state.editedPersonId != null && personId == this.state.editedPersonId)\r\n        {\r\n            this.endEdit();\r\n        }\r\n    }\r\n\r\n    endEdit()\r\n    {\r\n        this.setState({editingPerson: false, editedPersonId: null});\r\n    }\r\n\r\n    startDrag(personId)\r\n    {\r\n        // console.log(\"starting drag\");\r\n        this.setState({isDragging: true, draggedId: personId});\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        window.addEventListener(\"mouseup\", this.endDrag);\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        window.removeEventListener(\"mouseup\", this.endDrag);\r\n    }\r\n\r\n    tryDrag(e, referenceElement)\r\n    {\r\n        //this was the only solution that calculated coords correctly, but it needs a ref element passed somehow\r\n        const offset = Helpers.getRelativeCoords(e.nativeEvent, referenceElement);\r\n        // console.log(\"dragging \"+ this.state.draggedId +\" to [\" + offset.x + \", \" + offset.y + \"]\");\r\n        if (this.state.isDragging === true && this.state.draggedId != null && this.state.draggedId >= 0)\r\n        {\r\n            const newLocation = this.calcLocationFromOffset(offset);\r\n            const i = this.context.currentTree.family.findIndex(item => item.id == this.state.draggedId);\r\n            const draftPerson = Person.cloneFromOther(this.context.currentTree.family[i]);\r\n            // console.log(\"new location: [\" + newLocation.x + \", \" + newLocation.y + \"]\");\r\n            draftPerson.locationInTreeX = newLocation.x;\r\n            draftPerson.locationInTreeY = newLocation.y;\r\n            this.context.familyHandlers.handleEditFamMember(this.state.draggedId, draftPerson);\r\n        }\r\n    }\r\n\r\n    endDrag()\r\n    {\r\n        // console.log(\"ending drag\");\r\n        this.setState({isDragging: false, draggedId: null});\r\n    }\r\n\r\n    calcLocationFromOffset(offset)\r\n    {\r\n        return {\r\n            x: Math.round(offset.x / this.state.locationScale),\r\n            y: Math.round(offset.y / this.state.locationScale)\r\n        };\r\n    }\r\n\r\n    calcCssSizeOfConnectionRenderer()\r\n    {\r\n        //bounds of the tree incremented by 2 in both axis, so the line renderer also acts as a stretcher\r\n        //for the whole area of the tree\r\n        const bounds = this.context.currentTree.getBounds(this.state.stretcherOverhead.x, this.state.stretcherOverhead.y);\r\n        return {\r\n            width: (bounds.x * this.state.locationScale) + \"px\",\r\n            height: (bounds.y * this.state.locationScale) + \"px\"\r\n        };\r\n    }\r\n\r\n    zoom(dir)\r\n    {\r\n        if (dir == 0){return;}\r\n        dir = (dir > 0) ? 1 : -1;\r\n        this.setState((prevState, props) => (\r\n            {\r\n                zoomLvl: prevState.zoomLvl + dir,\r\n                locationScale: this.#locationScalesByZoom[prevState.zoomLvl + dir],\r\n                lineCenteringOffset: this.#lineCenteringOffsetByZoom[prevState.zoomLvl + dir]\r\n            }\r\n        ));\r\n    }\r\n    \r\n    render()\r\n    {\r\n        const familyMembers = this.context.currentTree.family.map((member) =>\r\n            <FamilyMember\r\n                key={member.id}\r\n                person={member}\r\n                familyHandlers={this.context.familyHandlers}\r\n                reportDeletionToEdit={this.reportDeletionToEdit}\r\n                startEdit={this.startEdit}\r\n                locationScale={this.state.locationScale}\r\n                zoomLvl={this.state.zoomLvl}\r\n                startDrag={this.startDrag}\r\n            />\r\n        );\r\n\r\n        //finding people on both ends of lines using parent ids\r\n        const lineEndMembers = [];\r\n        for (let i = 0; i < this.context.currentTree.family.length; i++)\r\n        {\r\n            const a = this.context.currentTree.family[i];\r\n\r\n            for (let q = 0; q < 2; q++)\r\n            {\r\n                const index = this.context.currentTree.family.findIndex(item => item.id == a[\"parentId\" + q]);\r\n                if (index >= 0)\r\n                {\r\n                    lineEndMembers.push({\r\n                        a: a,\r\n                        b: this.context.currentTree.family[index]\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        const connections = lineEndMembers.map((lineEnds) =>\r\n            <FamilyConnection\r\n                key={lineEnds.a.id + \"-\" + lineEnds.b.id}\r\n                personA={lineEnds.a}\r\n                personB={lineEnds.b}\r\n                locationScale={this.state.locationScale}\r\n                lineCenteringOffset={this.state.lineCenteringOffset}\r\n            />\r\n        );\r\n\r\n        const editedPersonIndex = this.context.currentTree.family.findIndex(item => item.id == this.state.editedPersonId);\r\n        const editedPerson = (editedPersonIndex >= 0) ? this.context.currentTree.family[editedPersonIndex] : null;\r\n\r\n        const sideDrawer = (\r\n            <SideDrawer\r\n                name=\"Editing...\"\r\n                content={\r\n                    <SideDrawerEditMemberForm\r\n                        editedPerson={editedPerson}\r\n                        handleEdit={this.context.familyHandlers.handleEditFamMember}\r\n                        handleEditMultiple={this.context.familyHandlers.handleEditFamMembers}\r\n                        family={this.context.currentTree.family}\r\n                    />}\r\n                closeAction={this.endEdit}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <div className=\"family_view\">\r\n                {this.state.editingPerson === true && sideDrawer}\r\n                <div className=\"zoom_wrapper\">\r\n                    <button onClick={this.zoom.bind(this, 1)} disabled={this.state.zoomLvl == this.#zoomMax}>+</button>\r\n                    <button onClick={this.zoom.bind(this, -1)} disabled={this.state.zoomLvl == this.#zoomMin}>-</button>\r\n                </div>\r\n                <div id=\"family_tree\" className=\"family_tree\" onMouseMove={this.state.isDragging ? (e) => this.tryDrag(e, document.getElementById(\"family_tree\")) : undefined}>\r\n                    {familyMembers}\r\n                    <ConnectionRenderer style={this.calcCssSizeOfConnectionRenderer()}>\r\n                        {connections}\r\n                    </ConnectionRenderer>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FamilyView;","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyMember.jsx",["115","116","117","118","119"],"D:\\ReactProjects\\lite-lineage\\src\\components\\SideDrawer.jsx",["120"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass SideDrawer extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        //this.state = {}\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"side_drawer\">\r\n                <div className=\"side_drawer_bar\">\r\n                    <h3>{this.props.name}</h3>\r\n                    <button className=\"side_drawer_close_button\" onClick={this.props.closeAction}>x</button>\r\n                </div>\r\n                <div className=\"side_drawer_content\">\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideDrawer;","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyMemberExtension.jsx",["121"],"D:\\ReactProjects\\lite-lineage\\src\\components\\NavInFamily.jsx",[],"D:\\ReactProjects\\lite-lineage\\src\\FamilyTree.js",["122","123","124"],"D:\\ReactProjects\\lite-lineage\\src\\Person.js",["125","126","127","128","129","130","131","132","133"],"D:\\ReactProjects\\lite-lineage\\src\\components\\SideDrawerEditMemberForm.jsx",["134","135","136","137"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Person from '../Person';\r\nimport SelectParent from './SelectParent';\r\nimport SpecialDateInput from './SpecialDateInput';\r\n\r\nclass EditMemberForm extends Component\r\n{\r\n    #noneSign = \"-\";\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        //this.state = {}\r\n        this.changeName = this.changeName.bind(this);\r\n        this.changeStr = this.changeStr.bind(this);\r\n        this.changeBool = this.changeBool.bind(this);\r\n        this.changeNotes = this.changeNotes.bind(this);\r\n        this.changeDate = this.changeDate.bind(this);\r\n        this.changeNumberOfHealthProblems = this.changeNumberOfHealthProblems.bind(this);\r\n        this.changeHealthProblem = this.changeHealthProblem.bind(this);\r\n        this.changeParents = this.changeParents.bind(this);\r\n    }\r\n\r\n    //there's a bunch of similar methods, might need different processing for different types later\r\n    changeName(e, propertyName)\r\n    {\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        const possibleVariants = [\"firstName\", \"lastName\", \"secondName\"];\r\n        if (possibleVariants.includes(propertyName) && draftPerson.hasOwnProperty(propertyName))\r\n        {\r\n            draftPerson[propertyName] = e.target.value;\r\n            this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n        }\r\n        else\r\n        {\r\n            console.error(\"propertyName:\" + propertyName + \" not recognized as a possible variant, or is not an own property of a Person obj\");\r\n        }\r\n    }\r\n\r\n    changeNotes(e)\r\n    {\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        draftPerson.notes = e.target.value;\r\n        this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n    }\r\n\r\n    changeStr(e, propertyName)\r\n    {\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        if (draftPerson.hasOwnProperty(propertyName))\r\n        {\r\n            draftPerson[propertyName] = e.target.value.toString();\r\n            this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n        }\r\n        else\r\n        {\r\n            console.error(\"propertyName:\" + propertyName + \" is not an own property of a Person obj\");\r\n        }\r\n    }\r\n\r\n    changeBool(e, propertyName)\r\n    {\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        if (draftPerson.hasOwnProperty(propertyName))\r\n        {\r\n            draftPerson[propertyName] = e.target.checked;\r\n            this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n        }\r\n        else\r\n        {\r\n            console.error(\"propertyName:\" + propertyName + \" is not an own property of a Person obj\");\r\n        }\r\n    }\r\n\r\n    changeDate(dateObj, propertyName)\r\n    {\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        const possibleVariants = [\"dateBirth\", \"dateDeath\"];\r\n        if (possibleVariants.includes(propertyName) && draftPerson.hasOwnProperty(propertyName))\r\n        {\r\n            draftPerson[propertyName] = dateObj;\r\n            this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n        }\r\n        else\r\n        {\r\n            console.error(\"propertyName:\" + propertyName + \" not recognized as a possible variant, or is not an own property of a Person obj\");\r\n        }\r\n    }\r\n\r\n    changeParents(e, parentIndex)\r\n    {\r\n        const newParentId = e.target.value;\r\n        if (parentIndex == 0 || parentIndex == 1)\r\n        {\r\n            const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n            draftPerson[\"parentId\" + parentIndex] = (newParentId === this.#noneSign) ? null : newParentId;\r\n            this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n        }\r\n        else\r\n        {\r\n            console.error(\"invalid parentIndex, should be 0 or 1: \" + parentIndex);\r\n        }\r\n    }\r\n\r\n    changeHealthProblem(e)\r\n    {\r\n        const index = e.target.name.replace(\"health_problem_\", \"\");\r\n        console.log(e);\r\n        if (this.props.editedPerson.healthProblems.length > index && index >= 0)\r\n        {\r\n            const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n            draftPerson.healthProblems[index] = e.target.value;\r\n            this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n        }\r\n    }\r\n\r\n    changeNumberOfHealthProblems(n)\r\n    {\r\n        if (n == 0){return;}\r\n        if (n == -1 && this.props.editedPerson.healthProblems.length < 1){return;}\r\n\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        if (n > 0)\r\n        {\r\n            draftPerson.healthProblems.push(\"\");\r\n        }\r\n        else\r\n        {\r\n            draftPerson.healthProblems.splice(-1, 1);\r\n        }\r\n        this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n    }\r\n\r\n    render()\r\n    {\r\n        const healthProblemInputs = this.props.editedPerson.healthProblems.map((problem, index) => (\r\n            <input value={problem} onChange={this.changeHealthProblem.bind(this)} type=\"text\" key={index} name={\"health_problem_\" + index} className=\"word_input side_drawer_input\"/>\r\n        ));\r\n\r\n        const potentialParents0 = this.props.editedPerson.getValidPotentialParents(this.props.family, true, false);\r\n        const potentialParents1 = this.props.editedPerson.getValidPotentialParents(this.props.family, false, true);\r\n        const currentParents = this.props.editedPerson.getCurrentParents(this.props.family);\r\n\r\n        return (\r\n            <form>\r\n                <div className=\"side_drawer_content_section\">\r\n                    <label htmlFor=\"name_first\" className=\"word_input_label\">First name:</label>\r\n                    <input value={this.props.editedPerson.firstName} onChange={(e) => this.changeName(e, \"firstName\")} type=\"text\" name=\"name_first\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"name_second\" className=\"word_input_label\">Second name:</label>\r\n                    <input value={this.props.editedPerson.secondName} onChange={(e) => this.changeName(e, \"secondName\")} type=\"text\" name=\"name_second\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"name_last\" className=\"word_input_label\">Last name:</label>\r\n                    <input value={this.props.editedPerson.lastName} onChange={(e) => this.changeName(e, \"lastName\")} type=\"text\" name=\"name_last\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"is_dead\" className=\"checkbox_input_label\">Deceased:</label>\r\n                    <input checked={this.props.editedPerson.isDead} onChange={(e) => this.changeBool(e, \"isDead\")} type=\"checkbox\" name=\"is_dead\" className=\"checkbox_input side_drawer_input\"/>\r\n                </div>\r\n\r\n                <div className=\"side_drawer_content_section\">\r\n                    <p className=\"side_drawer_full_line\">Parents:</p>\r\n                    <SelectParent handleChange={this.changeParents} currentParent={currentParents[0]} potentialParents={potentialParents0} parentSlotIndex={0} noneSign={this.#noneSign}/>\r\n                    <SelectParent handleChange={this.changeParents} currentParent={currentParents[1]} potentialParents={potentialParents1} parentSlotIndex={1} noneSign={this.#noneSign}/>\r\n                </div>\r\n\r\n                <SpecialDateInput\r\n                    date={this.props.editedPerson.dateBirth}\r\n                    useFull={this.props.editedPerson.useFullDateBirth}\r\n                    impreciseYear={this.props.editedPerson.unsurePreciseYearOfBirth}\r\n                    unknownDate={this.props.editedPerson.unknownDateOfBirth}\r\n                    dateOfStr={\"birth\"}\r\n                    displayedDate={this.props.editedPerson.getDisplayDateBirth()}\r\n                    handleChangeDate={this.changeDate}\r\n                    handleChangeBool={this.changeBool}\r\n                    propertySuffix={\"Birth\"}\r\n                />\r\n\r\n                {this.props.editedPerson.isDead && (\r\n                    <SpecialDateInput\r\n                        date={this.props.editedPerson.dateDeath}\r\n                        useFull={this.props.editedPerson.useFullDateDeath}\r\n                        unsurePreciseYear={this.props.editedPerson.unsurePreciseYearOfDeath}\r\n                        unknownDate={this.props.editedPerson.unknownDateOfDeath}\r\n                        dateOfStr={\"death\"}\r\n                        displayedDate={this.props.editedPerson.getDisplayDateDeath()}\r\n                        handleChangeDate={this.changeDate}\r\n                        handleChangeBool={this.changeBool}\r\n                        propertySuffix={\"Death\"}\r\n                    />\r\n                )}\r\n\r\n                <div className=\"side_drawer_content_section\">\r\n                    <label htmlFor=\"cause_of_death\" className=\"word_input_label\">Cause of death:</label>\r\n                    <input value={this.props.editedPerson.causeOfDeath} onChange={(e) => this.changeStr(e, \"causeOfDeath\")} type=\"text\" name=\"cause_of_death\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"place_birth\" className=\"word_input_label\">Place of birth:</label>\r\n                    <input value={this.props.editedPerson.placeBirth} onChange={(e) => this.changeStr(e, \"placeBirth\")} type=\"text\" name=\"place_birth\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"place_death\" className=\"word_input_label\">Place of death:</label>\r\n                    <input value={this.props.editedPerson.placeDeath} onChange={(e) => this.changeStr(e, \"placeDeath\")} type=\"text\" name=\"place_death\" className=\"word_input side_drawer_input\"/>\r\n                </div>\r\n                \r\n                <div className=\"side_drawer_content_section\">\r\n                    <label htmlFor=\"color_eye\" className=\"word_input_label\">Eye color:</label>\r\n                    <input value={this.props.editedPerson.colorEyes} onChange={(e) => this.changeStr(e, \"colorEyes\")} type=\"text\" name=\"color_eye\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"color_hair\" className=\"word_input_label\">Hair color:</label>\r\n                    <input value={this.props.editedPerson.colorHair} onChange={(e) => this.changeStr(e, \"colorHair\")} type=\"text\" name=\"color_hair\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <div className=\"side_drawer_input_list\">\r\n                        <p className=\"side_drawer_full_line\">Diseases and health problems:</p>\r\n                        {healthProblemInputs}\r\n                        <button type=\"button\" onClick={this.changeNumberOfHealthProblems.bind(this, 1)}>+</button>\r\n                        <button type=\"button\" onClick={this.changeNumberOfHealthProblems.bind(this, -1)}>-</button>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"notes\" className=\"side_drawer_full_line\">Notes:</label>\r\n                    <textarea value={this.props.editedPerson.notes} onChange={this.changeNotes} name=\"notes\" className=\"multiline_input side_drawer_input\"/> \r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditMemberForm;","D:\\ReactProjects\\lite-lineage\\src\\components\\StartTreeButton.jsx",["138"],"import React, { Component } from 'react';\r\nimport IconDelete from '../icons/icon_delete.svg';\r\nimport TreeContext from '../TreeContext';\r\n\r\nclass StartTreeButton extends Component\r\n{\r\n    static contextType = TreeContext;\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {tryingToDelete: false}\r\n        this.handleCancelingDelete = this.handleCancelingDelete.bind(this);\r\n        this.handleTryingToDelete = this.handleTryingToDelete.bind(this);\r\n    }\r\n\r\n    handleTryingToDelete()\r\n    {\r\n        this.setState({tryingToDelete: true});\r\n    }\r\n\r\n    handleCancelingDelete()\r\n    {\r\n        this.setState({tryingToDelete: false});\r\n    }\r\n    \r\n    render()\r\n    {\r\n        const confirmation = (\r\n            <div className=\"start_button_delete_confirmation\">\r\n                <p>{\"Do you really want to delete \" + this.props.treeName + \"?\"}</p>\r\n                <div>\r\n                    <button className=\"confirmation_button_warning\" onClick={this.context.treeHandlers.handleDeleteTree.bind(this, this.props.treeName)}>YES</button>\r\n                    <button className=\"confirmation_button_neutral\" onClick={this.handleCancelingDelete}>NO</button>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"start_button_wrapper\">\r\n                <button onClick={this.context.treeHandlers.handleOpenTree.bind(this, this.props.treeName)} className=\"start_button\">\r\n                    {this.props.treeName}\r\n                </button>\r\n                <button onClick={this.handleTryingToDelete} className=\"start_button_delete\">\r\n                    <img src={IconDelete}/>\r\n                </button>\r\n                {(this.state.tryingToDelete === true && confirmation)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StartTreeButton;","D:\\ReactProjects\\lite-lineage\\src\\TreeContext.js",["139"],"//import { createContext } from \"react\";\r\nimport React, {createContext} from 'react';\r\n\r\nconst TreeContext = React.createContext(\r\n    {\r\n        currentTree: null,\r\n        isInTree: false,\r\n        treeNames:[],\r\n\r\n        treeHandlers: {},\r\n        familyHandlers: {},\r\n    }\r\n);\r\n\r\nexport default TreeContext;","D:\\ReactProjects\\lite-lineage\\src\\components\\SpecialDateInput.jsx",[],"D:\\ReactProjects\\lite-lineage\\src\\Helpers.js",["140","141","142"],"const helpers = {\r\n    getDaysInMonthOfYear(monthIntZeroBased, yearInt)\r\n    {\r\n        //month 0-based as in js Date obj .getMonth(), eg january is 0\r\n        switch (monthIntZeroBased) {\r\n            case 1 :\r\n                return (yearInt % 4 == 0 && yearInt % 100 != 0) || yearInt % 400 == 0 ? 29 : 28;\r\n            case 8 : case 3 : case 5 : case 10 :\r\n                return 30;\r\n            default :\r\n                return 31\r\n        }\r\n    },\r\n\r\n    isDateValid(yearInt, monthIntZeroBased, dayInt)\r\n    {\r\n        //this doesnt change if the year falls outside of the +/-271821 limit of Date()\r\n        const maxDay = this.getDaysInMonthOfYear(monthIntZeroBased, yearInt)\r\n        return monthIntZeroBased >= 0 && monthIntZeroBased < 12 && dayInt > 0 && dayInt <= maxDay;\r\n    },\r\n\r\n    /**\r\n     * Force a value to be between min and max.\r\n     * @param {Number} n, @param {Number} min, @param {Number} max\r\n     */\r\n    clamp(n, min, max)\r\n    {\r\n        if (n < min){return min;}\r\n        if (n > max){return max;}\r\n        return n;\r\n    },\r\n\r\n    getRelativeCoords (event, referenceElement)\r\n    {\r\n        const position = {\r\n          x: event.pageX,\r\n          y: event.pageY\r\n        };\r\n      \r\n        const offset ={\r\n          left: referenceElement.offsetLeft - referenceElement.scrollLeft,\r\n          top: referenceElement.offsetTop - referenceElement.scrollTop\r\n        };\r\n      \r\n        let reference = referenceElement.offsetParent;\r\n      \r\n        while(reference)\r\n        {\r\n          offset.left += reference.offsetLeft;\r\n          offset.top += reference.offsetTop;\r\n          reference = reference.offsetParent;\r\n        }\r\n      \r\n        return { \r\n          x: position.x - offset.left,\r\n          y: position.y - offset.top,\r\n        }; \r\n    }\r\n\r\n    \r\n};\r\n\r\nexport default helpers;","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyConnection.jsx",["143"],"import React, { Component } from 'react';\r\n\r\nclass FamilyConnection extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        //this.state = {}\r\n    }\r\n    \r\n    render()\r\n    {\r\n        const coords = {\r\n            x1: this.props.personA.locationInTreeX * this.props.locationScale + this.props.lineCenteringOffset.x,\r\n            y1: this.props.personA.locationInTreeY * this.props.locationScale + this.props.lineCenteringOffset.y,\r\n\r\n            x2: this.props.personB.locationInTreeX * this.props.locationScale + this.props.lineCenteringOffset.x,\r\n            y2: this.props.personB.locationInTreeY * this.props.locationScale + this.props.lineCenteringOffset.y\r\n        };\r\n\r\n        return (\r\n            <line {...coords} stroke={\"white\"}></line>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FamilyConnection;","D:\\ReactProjects\\lite-lineage\\src\\components\\ConnectionRenderer.jsx",["144"],"import React, { Component } from 'react';\r\n\r\nclass ConnectionRenderer extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return (\r\n            <svg style={this.props.style}>{this.props.children}</svg>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConnectionRenderer;","D:\\ReactProjects\\lite-lineage\\src\\components\\SelectParent.jsx",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":224,"column":87,"nodeType":"151","messageId":"152","endLine":224,"endColumn":89},{"ruleId":"149","severity":1,"message":"150","line":277,"column":51,"nodeType":"151","messageId":"152","endLine":277,"endColumn":53},{"ruleId":"149","severity":1,"message":"153","line":302,"column":26,"nodeType":"151","messageId":"152","endLine":302,"endColumn":28},{"ruleId":"149","severity":1,"message":"150","line":307,"column":57,"nodeType":"151","messageId":"152","endLine":307,"endColumn":59},{"ruleId":"149","severity":1,"message":"150","line":326,"column":51,"nodeType":"151","messageId":"152","endLine":326,"endColumn":53},{"ruleId":"154","severity":1,"message":"155","line":11,"column":5,"nodeType":"156","messageId":"157","endLine":15,"endColumn":6},{"ruleId":"149","severity":1,"message":"150","line":55,"column":96,"nodeType":"151","messageId":"152","endLine":55,"endColumn":98},{"ruleId":"149","severity":1,"message":"150","line":90,"column":81,"nodeType":"151","messageId":"152","endLine":90,"endColumn":83},{"ruleId":"149","severity":1,"message":"150","line":126,"column":17,"nodeType":"151","messageId":"152","endLine":126,"endColumn":19},{"ruleId":"149","severity":1,"message":"150","line":160,"column":89,"nodeType":"151","messageId":"152","endLine":160,"endColumn":91},{"ruleId":"149","severity":1,"message":"150","line":181,"column":93,"nodeType":"151","messageId":"152","endLine":181,"endColumn":95},{"ruleId":"149","severity":1,"message":"150","line":202,"column":92,"nodeType":"151","messageId":"152","endLine":202,"endColumn":94},{"ruleId":"149","severity":1,"message":"150","line":203,"column":93,"nodeType":"151","messageId":"152","endLine":203,"endColumn":95},{"ruleId":"158","severity":1,"message":"159","line":45,"column":21,"nodeType":"160","endLine":45,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":49,"column":25,"nodeType":"160","endLine":49,"endColumn":82},{"ruleId":"158","severity":1,"message":"159","line":58,"column":25,"nodeType":"160","endLine":58,"endColumn":84},{"ruleId":"158","severity":1,"message":"159","line":65,"column":21,"nodeType":"160","endLine":65,"endColumn":74},{"ruleId":"158","severity":1,"message":"159","line":71,"column":25,"nodeType":"160","endLine":71,"endColumn":78},{"ruleId":"154","severity":1,"message":"155","line":6,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":6},{"ruleId":"154","severity":1,"message":"155","line":6,"column":5,"nodeType":"156","messageId":"157","endLine":10,"endColumn":6},{"ruleId":"149","severity":1,"message":"150","line":109,"column":27,"nodeType":"151","messageId":"152","endLine":109,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":138,"column":57,"nodeType":"151","messageId":"152","endLine":138,"endColumn":59},{"ruleId":"149","severity":1,"message":"150","line":168,"column":57,"nodeType":"151","messageId":"152","endLine":168,"endColumn":59},{"ruleId":"149","severity":1,"message":"150","line":56,"column":30,"nodeType":"151","messageId":"152","endLine":56,"endColumn":32},{"ruleId":"149","severity":1,"message":"150","line":60,"column":35,"nodeType":"151","messageId":"152","endLine":60,"endColumn":37},{"ruleId":"149","severity":1,"message":"150","line":123,"column":25,"nodeType":"151","messageId":"152","endLine":123,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":123,"column":64,"nodeType":"151","messageId":"152","endLine":123,"endColumn":66},{"ruleId":"149","severity":1,"message":"150","line":123,"column":98,"nodeType":"151","messageId":"152","endLine":123,"endColumn":100},{"ruleId":"149","severity":1,"message":"150","line":124,"column":30,"nodeType":"151","messageId":"152","endLine":124,"endColumn":32},{"ruleId":"149","severity":1,"message":"150","line":125,"column":30,"nodeType":"151","messageId":"152","endLine":125,"endColumn":32},{"ruleId":"149","severity":1,"message":"150","line":140,"column":53,"nodeType":"151","messageId":"152","endLine":140,"endColumn":55},{"ruleId":"149","severity":1,"message":"150","line":141,"column":53,"nodeType":"151","messageId":"152","endLine":141,"endColumn":55},{"ruleId":"149","severity":1,"message":"150","line":94,"column":25,"nodeType":"151","messageId":"152","endLine":94,"endColumn":27},{"ruleId":"149","severity":1,"message":"150","line":94,"column":45,"nodeType":"151","messageId":"152","endLine":94,"endColumn":47},{"ruleId":"149","severity":1,"message":"150","line":120,"column":15,"nodeType":"151","messageId":"152","endLine":120,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":121,"column":15,"nodeType":"151","messageId":"152","endLine":121,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":45,"column":21,"nodeType":"160","endLine":45,"endColumn":44},{"ruleId":"161","severity":1,"message":"162","line":2,"column":16,"nodeType":"163","messageId":"164","endLine":2,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":7,"column":37,"nodeType":"151","messageId":"152","endLine":7,"endColumn":39},{"ruleId":"149","severity":1,"message":"153","line":7,"column":59,"nodeType":"151","messageId":"152","endLine":7,"endColumn":61},{"ruleId":"149","severity":1,"message":"150","line":7,"column":82,"nodeType":"151","messageId":"152","endLine":7,"endColumn":84},{"ruleId":"154","severity":1,"message":"155","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":9,"endColumn":6},{"ruleId":"154","severity":1,"message":"155","line":5,"column":5,"nodeType":"156","messageId":"157","endLine":8,"endColumn":6},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]