[{"D:\\ReactProjects\\lite-lineage\\src\\index.js":"1","D:\\ReactProjects\\lite-lineage\\src\\App.js":"2","D:\\ReactProjects\\lite-lineage\\src\\reportWebVitals.js":"3","D:\\ReactProjects\\lite-lineage\\src\\components\\Content.jsx":"4","D:\\ReactProjects\\lite-lineage\\src\\components\\Header.jsx":"5","D:\\ReactProjects\\lite-lineage\\src\\components\\Footer.jsx":"6","D:\\ReactProjects\\lite-lineage\\src\\components\\StartView.jsx":"7","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyView.jsx":"8","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyMember.jsx":"9","D:\\ReactProjects\\lite-lineage\\src\\components\\SideDrawer.jsx":"10","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyMemberExtension.jsx":"11","D:\\ReactProjects\\lite-lineage\\src\\components\\NavInFamily.jsx":"12","D:\\ReactProjects\\lite-lineage\\src\\FamilyTree.js":"13","D:\\ReactProjects\\lite-lineage\\src\\Person.js":"14","D:\\ReactProjects\\lite-lineage\\src\\components\\SideDrawerEditMemberForm.jsx":"15","D:\\ReactProjects\\lite-lineage\\src\\components\\StartTreeButton.jsx":"16","D:\\ReactProjects\\lite-lineage\\src\\TreeContext.js":"17","D:\\ReactProjects\\lite-lineage\\src\\components\\SpecialDateInput.jsx":"18","D:\\ReactProjects\\lite-lineage\\src\\Helpers.js":"19","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyConnection.jsx":"20","D:\\ReactProjects\\lite-lineage\\src\\components\\ConnectionRenderer.jsx":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":8885,"mtime":1610547006636,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":592,"mtime":1610045473535,"results":"26","hashOfConfig":"23"},{"size":555,"mtime":1610045347870,"results":"27","hashOfConfig":"23"},{"size":280,"mtime":1609793104158,"results":"28","hashOfConfig":"23"},{"size":1374,"mtime":1610045363915,"results":"29","hashOfConfig":"23"},{"size":7900,"mtime":1610558153268,"results":"30","hashOfConfig":"23"},{"size":3686,"mtime":1610554857516,"results":"31","hashOfConfig":"23"},{"size":706,"mtime":1610134593881,"results":"32","hashOfConfig":"23"},{"size":586,"mtime":1609789001400,"results":"33","hashOfConfig":"23"},{"size":877,"mtime":1610466951692,"results":"34","hashOfConfig":"23"},{"size":7242,"mtime":1610546961493,"results":"35","hashOfConfig":"23"},{"size":3472,"mtime":1610383655929,"results":"36","hashOfConfig":"23"},{"size":10541,"mtime":1610475210736,"results":"37","hashOfConfig":"23"},{"size":1832,"mtime":1610045360126,"results":"38","hashOfConfig":"23"},{"size":313,"mtime":1610045323469,"results":"39","hashOfConfig":"23"},{"size":3702,"mtime":1610225479168,"results":"40","hashOfConfig":"23"},{"size":1827,"mtime":1610543397517,"results":"41","hashOfConfig":"23"},{"size":836,"mtime":1610557023317,"results":"42","hashOfConfig":"23"},{"size":327,"mtime":1610546192417,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"19gfp4v",{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\ReactProjects\\lite-lineage\\src\\index.js",[],["97","98"],"D:\\ReactProjects\\lite-lineage\\src\\App.js",["99","100","101","102","103","104"],"D:\\ReactProjects\\lite-lineage\\src\\reportWebVitals.js",[],"D:\\ReactProjects\\lite-lineage\\src\\components\\Content.jsx",["105"],"import React, { Component } from 'react';\r\nimport FamilyView from './FamilyView';\r\nimport StartView from './StartView';\r\nimport '../App.css';\r\nimport TreeContext from '../TreeContext';\r\n\r\nclass Content extends Component\r\n{\r\n    static contextType = TreeContext;\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        //this.state = {}\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"main_content\">\r\n                {(this.context.isInTree === true) ? <FamilyView/> : <StartView/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","D:\\ReactProjects\\lite-lineage\\src\\components\\Header.jsx",["106"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport NavInFamily from './NavInFamily';\r\nimport TreeContext from '../TreeContext';\r\n\r\nclass Header extends Component\r\n{\r\n    static contextType = TreeContext;\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    //state = {  }\r\n    render()\r\n    {\r\n        return(\r\n        <header className=\"main_header\">\r\n            <h1>LiteLineage</h1>\r\n            {this.context.isInTree === true && <NavInFamily/>}\r\n        </header>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","D:\\ReactProjects\\lite-lineage\\src\\components\\Footer.jsx",[],"D:\\ReactProjects\\lite-lineage\\src\\components\\StartView.jsx",["107"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport StartTreeButton from './StartTreeButton';\r\nimport TreeContext from '../TreeContext';\r\n\r\nclass StartView extends Component\r\n{\r\n    static contextType = TreeContext;\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        //this.state = {tryingToDeleteTree: false}\r\n    }\r\n\r\n    render()\r\n    { \r\n        const treeButtons = this.context.treeNames.map((treeName) =>\r\n            <StartTreeButton treeName={treeName} key={treeName}/>\r\n        );\r\n\r\n        return (\r\n            <div className=\"start_view\">\r\n                <div className=\"start_box\">\r\n                    <h2>Welcome to LiteLineage</h2>\r\n                    <p className=\"start_desc\">A simple tool for making family trees, with all key family data kept on your machine and no need to create an account. To begin, create a new tree, or pick an existing one.</p>\r\n                    <div className=\"start_button_tray\">\r\n                        {treeButtons}\r\n                        <div className=\"start_button_wrapper\">\r\n                            <button className=\"start_button start_button_special\" onClick={this.context.treeHandlers.handleNewTree}>NEW TREE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default StartView;","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyView.jsx",["108","109","110","111","112","113","114"],"D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyMember.jsx",["115","116","117","118","119"],"D:\\ReactProjects\\lite-lineage\\src\\components\\SideDrawer.jsx",["120"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass SideDrawer extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        //this.state = {}\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"side_drawer\">\r\n                <div className=\"side_drawer_bar\">\r\n                    <h3>{this.props.name}</h3>\r\n                    <button className=\"side_drawer_close_button\" onClick={this.props.closeAction}>x</button>\r\n                </div>\r\n                <div className=\"side_drawer_content\">\r\n                    {this.props.content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideDrawer;","D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyMemberExtension.jsx",["121"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass FamilyMemberExtension extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        //this.state = {}\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"family_member_extended\">\r\n                <p className=\"family_member_info\">Eye color: brown</p>\r\n                <p className=\"family_member_info\">Hair color: black</p>\r\n                <p className=\"family_member_info\"></p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FamilyMemberExtension;","D:\\ReactProjects\\lite-lineage\\src\\components\\NavInFamily.jsx",["122"],"import React, { Component } from 'react';\r\nimport TreeContext from '../TreeContext';\r\n\r\nclass NavInFamily extends Component\r\n{\r\n    static contextType = TreeContext;\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        //this.state = {}\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return (\r\n            <nav className=\"main_nav\">\r\n                {/* <button className=\"header_button\">EXPORT</button> */}\r\n                <button className=\"header_button\" onClick={this.context.familyHandlers.handleAddFamMember.bind(this, \"default\")}>\r\n                    NEW PERSON\r\n                </button>\r\n                {/* <button className=\"header_button\">HIGHLIGHT: OFF</button> */}\r\n                <button className=\"header_button\" onClick={this.context.treeHandlers.handleExitTree}>EXIT</button>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavInFamily;","D:\\ReactProjects\\lite-lineage\\src\\FamilyTree.js",["123","124","125"],"D:\\ReactProjects\\lite-lineage\\src\\Person.js",["126","127"],"class Person\r\n{\r\n    id;\r\n    locationInTreeX = 0;\r\n    locationInTreeY = 0;\r\n    firstName = \"\";\r\n    secondName = \"\";\r\n    lastName = \"\";\r\n\r\n    parentId0;\r\n    parentId1;\r\n    childrenIds = [];\r\n\r\n    isDead = false;\r\n    causeOfDeath = \"\";\r\n    dateBirth;\r\n    dateDeath;\r\n    useFullDateBirth = false;\r\n    useFullDateDeath = false;\r\n    unsurePreciseYearOfBirth = false;\r\n    unsurePreciseYearOfDeath = false;\r\n\r\n    placeBirth = \"\";\r\n    placeDeath = \"\";\r\n    coordsBirthLat;\r\n    coordsBirthLong;\r\n    coordsDeathLat;\r\n    coordsDeathLong;\r\n\r\n    colorEyes = \"\";\r\n    colorHair = \"\";\r\n    healthProblems = [];\r\n    notes = \"\";\r\n\r\n    #signUnknown = \"?\";\r\n    #signUnsure = \"X\";\r\n    constructor(id)\r\n    {\r\n        this.id = id;\r\n        this.dateBirth = new Date(\"1950/01/01\");\r\n        this.dateDeath = new Date(\"2000/01/01\");\r\n    }\r\n    \r\n    fillDataFromParsedJSON(parsedJsonObj)\r\n    {\r\n        for(let property in parsedJsonObj)\r\n        {\r\n            if (parsedJsonObj.hasOwnProperty(property) && this.hasOwnProperty(property))\r\n            {\r\n                //special case for dates since JSON.stringify() makes it into string\r\n                //and then  JSON.parse() reads it as a string\r\n                if (property == \"dateBirth\")\r\n                {\r\n                    this.dateBirth = new Date(parsedJsonObj[property]);\r\n                }\r\n                else if (property == \"dateDeath\")\r\n                {\r\n                    this.dateDeath = new Date(parsedJsonObj[property]);\r\n                }\r\n                else\r\n                {\r\n                    this[property] = parsedJsonObj[property];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getDisplayName()\r\n    {\r\n        if (this.firstName === \"\" && this.secondName === \"\" && this.lastName === \"\")\r\n        {\r\n            return this.#signUnknown;\r\n        }\r\n        let displayName = (this.firstName.length > 0) ? this.firstName : this.#signUnknown;\r\n        displayName += (this.secondName.length > 0) ? \" \" + this.secondName[0] + \". \" : \" \";\r\n        displayName += (this.lastName.length > 0) ? this.lastName : this.#signUnknown;\r\n        return displayName;\r\n    }\r\n\r\n    getDisplayDate(date, useFull, unsureOfYear)\r\n    {\r\n        let str = (useFull === true) ? date.getDate().toString().padStart(2, \"0\") + \".\" : \"\";\r\n        str += (useFull === true) ? (date.getMonth() + 1).toString().padStart(2, \"0\") + \".\" : \"\";\r\n        let year = date.getFullYear().toString();\r\n        if (unsureOfYear === true)\r\n        {\r\n            year = year.slice(0, -1) + this.#signUnsure;\r\n        }\r\n        return str.toString() + year.toString();\r\n    }\r\n\r\n    getDisplayDateBirth()\r\n    {\r\n        return this.getDisplayDate(this.dateBirth, this.useFullDateBirth, this.unsurePreciseYearOfBirth);\r\n    }\r\n\r\n    getDisplayDateDeath()\r\n    {\r\n        return this.getDisplayDate(this.dateDeath, this.useFullDateDeath, this.unsurePreciseYearOfDeath);\r\n    }\r\n\r\n    static cloneFromOther(otherPerson)\r\n    {\r\n        const clone = new Person(otherPerson.id);\r\n        for(let property in otherPerson)\r\n        {\r\n            if (clone.hasOwnProperty(property) && otherPerson.hasOwnProperty(property))\r\n            {\r\n                clone[property] = otherPerson[property];\r\n            }\r\n        }\r\n        clone.childrenIds = [...otherPerson.childrenIds];\r\n        clone.healthProblems = [...otherPerson.healthProblems];\r\n        return clone;\r\n    }\r\n}\r\n\r\nexport default Person;","D:\\ReactProjects\\lite-lineage\\src\\components\\SideDrawerEditMemberForm.jsx",["128","129","130","131","132"],"import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Person from '../Person';\r\nimport SpecialDateInput from './SpecialDateInput';\r\n\r\nclass EditMemberForm extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        //this.state = {}\r\n        this.changeName = this.changeName.bind(this);\r\n        this.changeStr = this.changeStr.bind(this);\r\n        this.changeBool = this.changeBool.bind(this);\r\n        this.changeNotes = this.changeNotes.bind(this);\r\n        this.changeDate = this.changeDate.bind(this);\r\n    }\r\n\r\n    //there's a bunch of similar methods, might need different processing for different types later\r\n    changeName(e, propertyName)\r\n    {\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        const possibleVariants = [\"firstName\", \"lastName\", \"secondName\"];\r\n        if (possibleVariants.includes(propertyName) && draftPerson.hasOwnProperty(propertyName))\r\n        {\r\n            draftPerson[propertyName] = e.target.value;\r\n            this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n        }\r\n        else\r\n        {\r\n            console.error(\"propertyName:\" + propertyName + \" not recognized as a possible variant, or is not an own property of a Person obj\");\r\n        }\r\n    }\r\n\r\n    changeNotes(e)\r\n    {\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        draftPerson.notes = e.target.value;\r\n        this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n    }\r\n\r\n    changeStr(e, propertyName)\r\n    {\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        const possibleVariants = [\"placeBirth\", \"placeDeath\", \"causeOfDeath\", \"colorEyes\", \"colorHair\"];\r\n        if (possibleVariants.includes(propertyName) && draftPerson.hasOwnProperty(propertyName))\r\n        {\r\n            draftPerson[propertyName] = e.target.value;\r\n            this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n        }\r\n        else\r\n        {\r\n            console.error(\"propertyName:\" + propertyName + \" not recognized as a possible variant, or is not an own property of a Person obj\");\r\n        }\r\n    }\r\n\r\n    changeBool(e, propertyName)\r\n    {\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        const possibleVariants = [\"isDead\", \"lastName\", \"secondName\", \"useFullDateBirth\", \"useFullDateDeath\", \"unsurePreciseYearOfBirth\", \"unsurePreciseYearOfDeath\"];\r\n        if (possibleVariants.includes(propertyName) && draftPerson.hasOwnProperty(propertyName))\r\n        {\r\n            draftPerson[propertyName] = e.target.checked;\r\n            this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n        }\r\n        else\r\n        {\r\n            console.error(\"propertyName:\" + propertyName + \" not recognized as a possible variant, or is not an own property of a Person obj\");\r\n        }\r\n    }\r\n\r\n    changeDate(dateObj, propertyName)\r\n    {\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        const possibleVariants = [\"dateBirth\", \"dateDeath\"];\r\n        if (possibleVariants.includes(propertyName) && draftPerson.hasOwnProperty(propertyName))\r\n        {\r\n            draftPerson[propertyName] = dateObj;\r\n            this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n        }\r\n        else\r\n        {\r\n            console.error(\"propertyName:\" + propertyName + \" not recognized as a possible variant, or is not an own property of a Person obj\");\r\n        }\r\n    }\r\n\r\n    changeParents(e, parentIndex, newParentId)\r\n    {\r\n        const draftPerson = Person.cloneFromOther(this.props.editedPerson);\r\n        if (parentIndex == 0 || parentIndex == 1)\r\n        {\r\n            //first if there is a parent already in that index, remove person as a child since Person class has both childrenIds array and 2 slots for parent\r\n            let i;\r\n            const oldParentId = this.editedPerson[\"parentId\" + parentIndex];\r\n            if (oldParentId)\r\n            {\r\n                i = this.props.family.findIndex(item => item.id == oldParentId);\r\n                if (i >= 0)\r\n                {\r\n                    const draftOldParent = Person.cloneFromOther(this.props.family[i]);\r\n                    const q = draftOldParent.childrenIds.findIndex(item => item == this.editedPerson.id);\r\n                    if (q >= 0)\r\n                    {\r\n                        draftOldParent.childrenIds.splice(q, 1);\r\n                        this.props.handleEdit(oldParentId, draftOldParent);\r\n                    }\r\n                }\r\n            }\r\n            //now assign parent, but because of Person class having childrenIds too, edit that parent as well\r\n            draftPerson[\"parentId\" + parentIndex] = newParentId;\r\n            this.props.handleEdit(this.props.editedPerson.id, draftPerson);\r\n\r\n            i = this.props.family.findIndex(item => item.id == newParentId);\r\n            if (i >= 0)\r\n            {\r\n                const draftNewParent = Person.cloneFromOther(this.props.family[i]);\r\n                draftNewParent.childrenIds.push(this.props.editedPerson.id);    \r\n                this.props.handleEdit(newParentId, draftNewParent);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            console.error(\"invalid parentIndex, should be 0 or 1: \" + parentIndex);\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <form>\r\n                <div className=\"side_drawer_content_section\">\r\n                    <label htmlFor=\"name_first\" className=\"word_input_label\">First name:</label>\r\n                    <input value={this.props.editedPerson.firstName} onChange={(e) => this.changeName(e, \"firstName\")} type=\"text\" name=\"name_first\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"name_second\" className=\"word_input_label\">Second name:</label>\r\n                    <input value={this.props.editedPerson.secondName} onChange={(e) => this.changeName(e, \"secondName\")} type=\"text\" name=\"name_second\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"name_last\" className=\"word_input_label\">Last name:</label>\r\n                    <input value={this.props.editedPerson.lastName} onChange={(e) => this.changeName(e, \"lastName\")} type=\"text\" name=\"name_last\" className=\"word_input side_drawer_input\"/>\r\n                </div>\r\n\r\n                <SpecialDateInput\r\n                    date={this.props.editedPerson.dateBirth}\r\n                    useFull={this.props.editedPerson.useFullDateBirth}\r\n                    impreciseYear={this.props.editedPerson.unsurePreciseYearOfBirth}\r\n                    dateOfStr={\"birth\"}\r\n                    displayedDate={this.props.editedPerson.getDisplayDateBirth()}\r\n                    handleChangeDate={this.changeDate}\r\n                    handleChangeBool={this.changeBool}\r\n                    propertySuffix={\"Birth\"}\r\n                />\r\n\r\n                {this.props.editedPerson.isDead && (\r\n                    <SpecialDateInput\r\n                        date={this.props.editedPerson.dateDeath}\r\n                        useFull={this.props.editedPerson.useFullDateDeath}\r\n                        unsurePreciseYear={this.props.editedPerson.unsurePreciseYearOfDeath}\r\n                        dateOfStr={\"death\"}\r\n                        displayedDate={this.props.editedPerson.getDisplayDateDeath()}\r\n                        handleChangeDate={this.changeDate}\r\n                        handleChangeBool={this.changeBool}\r\n                        propertySuffix={\"Death\"}\r\n                    />\r\n                )}\r\n\r\n                <div className=\"side_drawer_content_section\">\r\n                    <label htmlFor=\"is_dead\" className=\"checkbox_input_label\">Deceased:</label>\r\n                    <input checked={this.props.editedPerson.isDead} onChange={(e) => this.changeBool(e, \"isDead\")} type=\"checkbox\" name=\"is_dead\" className=\"checkbox_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"cause_of_death\" className=\"word_input_label\">Cause of death:</label>\r\n                    <input value={this.props.editedPerson.causeOfDeath} onChange={(e) => this.changeStr(e, \"causeOfDeath\")} type=\"text\" name=\"cause_of_death\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"place_birth\" className=\"word_input_label\">Place of birth:</label>\r\n                    <input value={this.props.editedPerson.placeBirth} onChange={(e) => this.changeStr(e, \"placeBirth\")} type=\"text\" name=\"place_birth\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"place_death\" className=\"word_input_label\">Place of death:</label>\r\n                    <input value={this.props.editedPerson.placeDeath} onChange={(e) => this.changeStr(e, \"placeDeath\")} type=\"text\" name=\"place_death\" className=\"word_input side_drawer_input\"/>\r\n                </div>\r\n                \r\n                <div className=\"side_drawer_content_section\">\r\n                    <label htmlFor=\"color_eye\" className=\"word_input_label\">Eye color:</label>\r\n                    <input value={this.props.editedPerson.colorEyes} onChange={(e) => this.changeStr(e, \"colorEyes\")} type=\"text\" name=\"color_eye\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <label htmlFor=\"color_hair\" className=\"word_input_label\">Hair color:</label>\r\n                    <input value={this.props.editedPerson.colorHair} onChange={(e) => this.changeStr(e, \"colorHair\")} type=\"text\" name=\"color_hair\" className=\"word_input side_drawer_input\"/>\r\n\r\n                    <div className=\"side_drawer_input_list\">\r\n                        <p className=\"side_drawer_full_line\">Diseases and health problems:</p>\r\n                        <input type=\"text\" name=\"disease_0\" className=\"word_input side_drawer_input\"/>\r\n                        <input type=\"text\" name=\"disease_1\" className=\"word_input side_drawer_input\"/>\r\n                        <input type=\"text\" name=\"disease_2\" className=\"word_input side_drawer_input\"/>\r\n                        <button>+</button>\r\n                        <button>-</button>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"notes\" className=\"side_drawer_full_line\">Notes:</label>\r\n                    <textarea value={this.props.editedPerson.notes} onChange={this.changeNotes} name=\"notes\" className=\"multiline_input side_drawer_input\"/> \r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditMemberForm;","D:\\ReactProjects\\lite-lineage\\src\\components\\StartTreeButton.jsx",["133"],"import React, { Component } from 'react';\r\nimport IconDelete from '../icons/icon_delete.svg';\r\nimport TreeContext from '../TreeContext';\r\n\r\nclass StartTreeButton extends Component\r\n{\r\n    static contextType = TreeContext;\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {tryingToDelete: false}\r\n        this.handleCancelingDelete = this.handleCancelingDelete.bind(this);\r\n        this.handleTryingToDelete = this.handleTryingToDelete.bind(this);\r\n    }\r\n\r\n    handleTryingToDelete()\r\n    {\r\n        this.setState({tryingToDelete: true});\r\n    }\r\n\r\n    handleCancelingDelete()\r\n    {\r\n        this.setState({tryingToDelete: false});\r\n    }\r\n    \r\n    render()\r\n    {\r\n        const confirmation = (\r\n            <div className=\"start_button_delete_confirmation\">\r\n                <p>{\"Do you really want to delete \" + this.props.treeName + \"?\"}</p>\r\n                <div>\r\n                    <button className=\"confirmation_button_warning\" onClick={this.context.treeHandlers.handleDeleteTree.bind(this, this.props.treeName)}>YES</button>\r\n                    <button className=\"confirmation_button_neutral\" onClick={this.handleCancelingDelete}>NO</button>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"start_button_wrapper\">\r\n                <button onClick={this.context.treeHandlers.handleOpenTree.bind(this, this.props.treeName)} className=\"start_button\">\r\n                    {this.props.treeName}\r\n                </button>\r\n                <button onClick={this.handleTryingToDelete} className=\"start_button_delete\">\r\n                    <img src={IconDelete}/>\r\n                </button>\r\n                {(this.state.tryingToDelete === true && confirmation)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StartTreeButton;","D:\\ReactProjects\\lite-lineage\\src\\TreeContext.js",["134"],"//import { createContext } from \"react\";\r\nimport React, {createContext} from 'react';\r\n\r\nconst TreeContext = React.createContext(\r\n    {\r\n        currentTree: null,\r\n        isInTree: false,\r\n        treeNames:[],\r\n\r\n        treeHandlers: {},\r\n        familyHandlers: {},\r\n    }\r\n);\r\n\r\nexport default TreeContext;","D:\\ReactProjects\\lite-lineage\\src\\components\\SpecialDateInput.jsx",[],"D:\\ReactProjects\\lite-lineage\\src\\Helpers.js",["135","136","137"],"D:\\ReactProjects\\lite-lineage\\src\\components\\FamilyConnection.jsx",["138"],"D:\\ReactProjects\\lite-lineage\\src\\components\\ConnectionRenderer.jsx",["139"],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":180,"column":28,"nodeType":"146","messageId":"147","endLine":180,"endColumn":30},{"ruleId":"144","severity":1,"message":"148","line":182,"column":65,"nodeType":"146","messageId":"147","endLine":182,"endColumn":67},{"ruleId":"144","severity":1,"message":"148","line":191,"column":64,"nodeType":"146","messageId":"147","endLine":191,"endColumn":66},{"ruleId":"144","severity":1,"message":"148","line":196,"column":47,"nodeType":"146","messageId":"147","endLine":196,"endColumn":49},{"ruleId":"144","severity":1,"message":"148","line":259,"column":51,"nodeType":"146","messageId":"147","endLine":259,"endColumn":53},{"ruleId":"144","severity":1,"message":"148","line":277,"column":51,"nodeType":"146","messageId":"147","endLine":277,"endColumn":53},{"ruleId":"149","severity":1,"message":"150","line":11,"column":5,"nodeType":"151","messageId":"152","endLine":15,"endColumn":6},{"ruleId":"149","severity":1,"message":"150","line":10,"column":5,"nodeType":"151","messageId":"152","endLine":13,"endColumn":6},{"ruleId":"149","severity":1,"message":"150","line":10,"column":5,"nodeType":"151","messageId":"152","endLine":14,"endColumn":6},{"ruleId":"144","severity":1,"message":"148","line":55,"column":96,"nodeType":"146","messageId":"147","endLine":55,"endColumn":98},{"ruleId":"144","severity":1,"message":"148","line":90,"column":81,"nodeType":"146","messageId":"147","endLine":90,"endColumn":83},{"ruleId":"144","severity":1,"message":"148","line":126,"column":17,"nodeType":"146","messageId":"147","endLine":126,"endColumn":19},{"ruleId":"144","severity":1,"message":"148","line":159,"column":89,"nodeType":"146","messageId":"147","endLine":159,"endColumn":91},{"ruleId":"144","severity":1,"message":"148","line":180,"column":93,"nodeType":"146","messageId":"147","endLine":180,"endColumn":95},{"ruleId":"144","severity":1,"message":"148","line":200,"column":92,"nodeType":"146","messageId":"147","endLine":200,"endColumn":94},{"ruleId":"144","severity":1,"message":"148","line":201,"column":93,"nodeType":"146","messageId":"147","endLine":201,"endColumn":95},{"ruleId":"153","severity":1,"message":"154","line":45,"column":21,"nodeType":"155","endLine":45,"endColumn":42},{"ruleId":"153","severity":1,"message":"154","line":49,"column":25,"nodeType":"155","endLine":49,"endColumn":82},{"ruleId":"153","severity":1,"message":"154","line":58,"column":25,"nodeType":"155","endLine":58,"endColumn":84},{"ruleId":"153","severity":1,"message":"154","line":65,"column":21,"nodeType":"155","endLine":65,"endColumn":74},{"ruleId":"153","severity":1,"message":"154","line":71,"column":25,"nodeType":"155","endLine":71,"endColumn":78},{"ruleId":"149","severity":1,"message":"150","line":6,"column":5,"nodeType":"151","messageId":"152","endLine":10,"endColumn":6},{"ruleId":"149","severity":1,"message":"150","line":6,"column":5,"nodeType":"151","messageId":"152","endLine":10,"endColumn":6},{"ruleId":"149","severity":1,"message":"150","line":8,"column":5,"nodeType":"151","messageId":"152","endLine":12,"endColumn":6},{"ruleId":"144","severity":1,"message":"148","line":68,"column":27,"nodeType":"146","messageId":"147","endLine":68,"endColumn":29},{"ruleId":"144","severity":1,"message":"148","line":97,"column":57,"nodeType":"146","messageId":"147","endLine":97,"endColumn":59},{"ruleId":"144","severity":1,"message":"148","line":127,"column":57,"nodeType":"146","messageId":"147","endLine":127,"endColumn":59},{"ruleId":"144","severity":1,"message":"148","line":52,"column":30,"nodeType":"146","messageId":"147","endLine":52,"endColumn":32},{"ruleId":"144","severity":1,"message":"148","line":56,"column":35,"nodeType":"146","messageId":"147","endLine":56,"endColumn":37},{"ruleId":"144","severity":1,"message":"148","line":90,"column":25,"nodeType":"146","messageId":"147","endLine":90,"endColumn":27},{"ruleId":"144","severity":1,"message":"148","line":90,"column":45,"nodeType":"146","messageId":"147","endLine":90,"endColumn":47},{"ruleId":"144","severity":1,"message":"148","line":97,"column":65,"nodeType":"146","messageId":"147","endLine":97,"endColumn":67},{"ruleId":"144","severity":1,"message":"148","line":101,"column":81,"nodeType":"146","messageId":"147","endLine":101,"endColumn":83},{"ruleId":"144","severity":1,"message":"148","line":113,"column":61,"nodeType":"146","messageId":"147","endLine":113,"endColumn":63},{"ruleId":"153","severity":1,"message":"154","line":45,"column":21,"nodeType":"155","endLine":45,"endColumn":44},{"ruleId":"156","severity":1,"message":"157","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":29},{"ruleId":"144","severity":1,"message":"148","line":7,"column":37,"nodeType":"146","messageId":"147","endLine":7,"endColumn":39},{"ruleId":"144","severity":1,"message":"145","line":7,"column":59,"nodeType":"146","messageId":"147","endLine":7,"endColumn":61},{"ruleId":"144","severity":1,"message":"148","line":7,"column":82,"nodeType":"146","messageId":"147","endLine":7,"endColumn":84},{"ruleId":"149","severity":1,"message":"150","line":5,"column":5,"nodeType":"151","messageId":"152","endLine":9,"endColumn":6},{"ruleId":"149","severity":1,"message":"150","line":5,"column":5,"nodeType":"151","messageId":"152","endLine":8,"endColumn":6},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]